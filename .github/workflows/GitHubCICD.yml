name: Android CI

on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Name of version like (2.3.0)'
        required: true
      versionCode:
        description: 'Version number (50500)'
        required: true
      emailTo:
        description: 'Add email recipients list separated by comma'
        required: true
      emailCC:
        description: 'Add email cc recipients list separated by comma'
        required: false
      googleChatWebhookURl:
        description: 'Add google chat webhook url'
        required: false

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build


      - name: Build all artifacts
        id: buildAllApks
        uses: eskatos/gradle-command-action@v1
        with:
          gradle-version: current
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: assembleRelease

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          configuration: ".github/config/configuration.json"
          ignorePreReleases: ${{ !contains(github.ref, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.versionName }}
          release_name: Release ${{ github.event.inputs.versionName }}
          body: ${{steps.github_release.outputs.changelog}}
          draft: false
          prerelease: false

      - name: Save name of our Artifact
        id: set-result-artifact
        run: |
          ARTIFACT_PATHNAME_APK=$(ls app/build/outputs/apk/debug/*.apk | head -n 1)
          ARTIFACT_NAME_APK=$(basename $ARTIFACT_PATHNAME_APK)
          echo "ARTIFACT_NAME_APK is " ${ARTIFACT_NAME_APK}
          echo "ARTIFACT_PATHNAME_APK=${ARTIFACT_PATHNAME_APK}" >> $GITHUB_ENV
          echo "ARTIFACT_NAME_APK=${ARTIFACT_NAME_APK}" >> $GITHUB_ENV


      - name: Upload our Artifact Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATHNAME_APK }}
          asset_name: '${{ env.ARTIFACT_NAME_APK }}.${{ github.event.inputs.versionName }}'
          asset_content_type: application/zip


      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: smtp.gmail.com
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Github Actions job result
          # Required recipients' addresses:
          to: ${{ github.event.inputs.emailTo }}
          # Required sender full name (address can be skipped):
          from: Chaitra Arasar # <user@example.com>
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional plain body:
          body: New release of ${{github.repository}} is here, Go and check it out!  https://github.com/chaitrasarasar/KeepMeUpdated/releases/latest
          #          # Optional HTML body read from file:
          #          html_body: file://README.md
          # Optional carbon copy recipients:
          cc: ${{ github.event.inputs.emailCC }}
          # Optional unsigned/invalid certificates allowance:
          ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: high
#
#      - name: Google Chat Notification
#        uses: Co-qn/google-chat-notification@releases/v1
#        with:
#          name: Build
#          url: ${{ github.event.inputs.googleChatWebhookURl }}
#          status: ${{ job.status }}
#        if: always()

